const int MAXN;

void Merge(int a[], int st, int mid, int dr) {
	int i, j, k, v[MAXN];
	i = st, j = mid + 1, k = 0;

	while(i <= mid && j <= dr)
		if(a[i] < a[j])
			v[++k] = a[i++];
		else
			v[++k] = a[j++];

	while(i <= mid)
		v[++k] = a[i++];
	while(j <= dr)
		v[++k] = a[j++];

	k = 1;
	for(i = st; i <= dr; i++)
		a[i] = v[k++];
}

void mergesort(int a[], int st, int dr) {
	if(st < dr) {
		int mid = st + (dr - st) / 2;
		mergesort(a, st, mid);
		mergesort(a, mid + 1, dr);
		Merge(a, st, mid, dr);
	}
}
